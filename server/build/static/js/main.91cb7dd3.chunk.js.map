{"version":3,"sources":["API.js","MovieForm.js","MovieRow.js","MovieTable.js","App.js","index.js"],"names":["APIURL","a","fetch","response","json","movie","method","headers","body","JSON","stringify","id","loadMovies","addMovie","deleteMovie","MovieForm","props","handleChange","ev","setState","target","name","value","handleSubmit","preventDefault","title","state","score","key","Form","this","onSubmit","Group","controlId","Label","Control","onChange","required","as","custom","Button","variant","type","React","Component","MovieRow","n","sts","i","push","src","star","alt","stars","onClick","trash","MovieTable","Table","bordered","style","width","movies","sort","b","map","App","loading","API","movieId","then","Container","Row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91cb7dd3.chunk.js","sourcesContent":["const APIURL = 'http://localhost:3000/api';\n\nasync function loadMovies() {\n  const response = await fetch(APIURL+'/movies');\n  const json = await response.json();\n  return json ;\n}\n\nasync function addMovie(movie) {\n  const response = await fetch(APIURL+'/movies', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(movie)\n  });\n  const json = await response.json();\n  return json ;\n}\n\nasync function deleteMovie(id) {\n  const response = await fetch(APIURL+`/movies/${id}`, {\n    method: 'delete',\n  });\n  const json = await response.json();\n  return json ;\n\n}\n\nexport default { loadMovies, addMovie, deleteMovie };","import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\n\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass MovieForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',  // Text input for movie title\n      score: '',  // Select input for movie score\n      key: 1,     // changing the 'key' will re-generate the form\n      // (resetting the content and the validation errors)\n    };\n  }\n\n\n  render() {\n    return (\n      <Form key={this.state.key} onSubmit={this.handleSubmit}>\n        <Form.Group controlId='movieTitle'>\n          <Form.Label>Title:&nbsp;</Form.Label>\n          <Form.Control value={this.state.title} name='title' onChange={this.handleChange} required />\n        </Form.Group>\n        <Form.Group controlId='movieScore'>\n          <Form.Label>Score </Form.Label>\n          <Form.Control as='select' custom value={this.state.score}\n            onChange={this.handleChange} name='score' required>\n            <option value=''> </option>\n            <option value={1}>☆</option>\n            <option value={2}>☆☆</option>\n            <option value={3}>☆☆☆</option>\n            <option value={4}>☆☆☆☆</option>\n            <option value={5}>☆☆☆☆☆</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId='movieAdd'>\n          <Button variant=\"primary\" type=\"submit\">Add</Button>\n        </Form.Group>\n\n      </Form>\n    );\n  }\n\n  handleChange = (ev) => {\n    this.setState({ [ev.target.name]: ev.target.value });\n  }\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    this.props.addMovie({ title: this.state.title, score: this.state.score });\n    this.setState((state) => ({ title: '', score: '', key: state.key + 1 }));\n  }\n\n}\n\nexport default MovieForm;","import React from 'react';\n\nimport trash from 'bootstrap-icons/icons/trash.svg';\nimport star from 'bootstrap-icons/icons/star.svg';\n\n\nfunction MovieRow(props) {\n  return (\n    <tr>\n      <td>{props.movie.title} ({props.movie.id})</td>\n      <td>{stars(props.movie.score)}</td>\n      <td><img onClick={()=>props.deleteMovie(props.movie.id)} src={trash} alt='delete'/></td>\n      </tr>\n  );\n}\n\nfunction stars(n) {\n  let sts = [] ;\n  for(let i = 0; i<n; i++) {\n    sts.push(<img key={i} src={star} alt=\"*\"/>);\n  }\n  return sts;\n}\n\nexport default MovieRow;","import React from 'react';\n\nimport Table from 'react-bootstrap/Table';\n\nimport MovieRow from './MovieRow';\n\nfunction MovieTable(props) {\n  return (\n    <Table bordered>\n      <thead>\n        <tr>\n          <th style={{ width: '70%' }}>Movie</th>\n          <th style={{ width: '20%' }}>Score</th>\n          <th style={{ width: '10%' }}>Action</th></tr>\n      </thead>\n      <tbody>\n        {props.movies\n          .sort((a, b) => (b.score - a.score))\n          .map((movie) => (<MovieRow key={movie.id} movie={movie}\n            deleteMovie={props.deleteMovie} />))}\n      </tbody>\n\n    </Table>\n  );\n}\n\nexport default MovieTable;","import React from 'react';\n\nimport API from './API';\n\nimport MovieForm from './MovieForm';\nimport MovieTable from './MovieTable';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { movies: [], loading: true };\n  }\n\n  componentDidMount() {\n    API.loadMovies().then((movies) => {\n      this.setState({ movies: movies, loading: false });\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>My Movies {this.state.loading ? '(...)' : ''}</h1>\n        <Row>\n          <MovieTable movies={this.state.movies}\n            deleteMovie={this.deleteMovie} />\n        </Row>\n        <h2>Add new movie</h2>\n        <MovieForm addMovie={this.addMovie} />\n      </Container>\n    );\n  }\n\n  addMovie = async (movie) => {\n    this.setState({ loading: true });\n    await API.addMovie(movie);\n    let movies = await API.loadMovies();\n    this.setState({ movies: movies, loading: false });\n  }\n\n  deleteMovie = async (movieId) => {\n    this.setState({ loading: true });\n    await API.deleteMovie(movieId);\n    let movies = await API.loadMovies();\n    this.setState({ movies: movies, loading: false });\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}